// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ItemView component should exist 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(ItemView)
    history="/bucketlists/"
    match={
        Object {
            "params": Object {
              "bucketlistId": 1,
              "itemId": 1,
              "itemName": "career",
            },
          }
    }
    store={
        Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "dispatch": [Function],
      "history": "/bucketlists/",
      "itemState": Object {
        "bucketlistName": "",
        "currentPage": 1,
        "limit": 3,
        "listToRender": Array [],
        "searchTerm": "",
        "totalItems": 0,
        "totalPages": 1,
      },
      "match": Object {
        "params": Object {
          "bucketlistId": 1,
          "itemId": 1,
          "itemName": "career",
        },
      },
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "storeSubscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": [Function],
      },
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "dispatch": [Function],
        "history": "/bucketlists/",
        "itemState": Object {
          "bucketlistName": "",
          "currentPage": 1,
          "limit": 3,
          "listToRender": Array [],
          "searchTerm": "",
          "totalItems": 0,
          "totalPages": 1,
        },
        "match": Object {
          "params": Object {
            "bucketlistId": 1,
            "itemId": 1,
            "itemName": "career",
          },
        },
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
          "unsubscribe": [Function],
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
